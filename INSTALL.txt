SOCNET.SE INSTALLATION INSTRUCTIONS
===================================
Socnet.se is a cross-platform C# CLI-based console application for direct
blockmodeling of network data. See README.txt for more information or visit:
https://www.socnet.se

Socnet is developed under the so-called MIT License. Please read LICENSE.txt
before use and/or compiling the source code.

This document explains how to compile the Socnet.se client from source code
that is available on its github repository:
https://github.com/carlnordlund/socnet


1. DEPENDENCIES
===============
To build Socnet.se from source, you need:
- .NET 6.0 SDK or later (such as .NET 8.0)
  Download this from: https://dotnet.microsoft.com/download

Optional (Windows only):
- Visual Studio 2022 (Community Edition or higher), which
  includes the .NET SDK.


2. GETTING THE SOURCE CODE
==========================
Clone this repository from GitHub:
  git clone https://github.com/carlnordlund/socnet.git

Navigate to the folder where your copy of the source code is:
  cd socnet

Optional (Visual Studio only):
- It is also possible to clone the repository from Visual Studio,
  i.e. using the github.com URL provided above.


3. BUILDING FROM SOURCE (CROSS-PLATFORM)
========================================
The Socnet.se project can be built using the .NET CLI, which works
the same on Windows, Linux and MacOS.

To build in Release mode:

  dotnet build -c Release

Binaries will be in:
  bin/Release/net6.0/

To build in Debug mode:

  dotnet build

This will produce binaries in:
  bin/Debug/net6.0/


4. RUNNING THE APPLICATION
==========================
You can run Socnet.se directly from the .NET CLI:

  dotnet run -- [arguments]

Or by executing the compiled binary (Release mode):

- Windows:
  .\bin\Release\net6.0\socnet.exe

- Linux / MacOS:
  ./bin/Release/net6.0/socnet

5. PUBLISHING SELF-CONTAINED BINARIES
=====================================
To compile the source code into stand-alone executables for
different platforms, use the 'dotnet publish' command in .NET CLI:

- Windows (x64, i.e. 64-bit):
    dotnet publish -c Release -r win-x64 --self-contained true -p:PublishSingleFile=true

- Linux (x64):
    dotnet publish -c Release -r linux-x64 --self-contained true -p:PublishSingleFile=true

- Linux (x64):
    dotnet publish -c Release -r linux-x64 --self-contained true -p:PublishSingleFile=true

The output will be placed in:
  bin/Release/net6.0/<RID>/publish/

...where <RID> is the runtime identifier (e.g. win-x64, linux-x64, osx-x64).

These published files can be distributed and run on the respective platforms without
requiring the .NET runtime. (These are the files that are available as pre-compiled
and code-signed binaries on https://www.socnet.se website).


6. PUBLISH WITH VISUAL STUDIO (Windows only)
============================================
Windows users can alternatively open the solution file in Visual Studio 2022:

  socnet.sln

This can then be built, run and published directly from the Visual Studio IDE.


7. NOTES
========
- Socnet.se is cross-platform: it compiles and runs on Windows, Linux and MacOS.

- Ensure that the .NET SDK is correctly installed and available in your system PATH
before attempting to build or run.